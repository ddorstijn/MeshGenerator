{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"GetCom",
				"GetComponent<T>()\tT"
			],
			[
				"Re",
				"RecalculateNormals()\tvoid"
			],
			[
				"json",
				"json_file\tstatement"
			],
			[
				"data",
				"data_x"
			],
			[
				"output",
				"output_num_units\tstatement"
			],
			[
				"da",
				"data_y"
			],
			[
				"train",
				"train_data\tstatement"
			],
			[
				"bat",
				"batch_x\tstatement"
			],
			[
				"b",
				"batch_size\tstatement"
			],
			[
				"batch",
				"batch_y\tstatement"
			],
			[
				"ba",
				"batch_size\tparam"
			],
			[
				"load",
				"load_data"
			],
			[
				"acti",
				"activity"
			],
			[
				"x",
				"xscale〔function〕"
			],
			[
				"for",
				"for\tFor Loop"
			],
			[
				"mai",
				"main\tmain()"
			],
			[
				"cou",
				"cout\tstd::ostream cout"
			],
			[
				"fo",
				"for_\tFor Loop"
			],
			[
				"inc",
				"inc\t#include <…>"
			],
			[
				"vec",
				"value_comp\tfunc"
			],
			[
				"QtWidgt",
				"QtWidget\timport"
			],
			[
				"QtWidgets",
				"QtWidgets\tmodule"
			],
			[
				"QtW",
				"QtWidgets\tmodule"
			],
			[
				"QA",
				"QAction\tclass"
			],
			[
				"setS",
				"setShortcut\tfunction"
			],
			[
				"saveAc",
				"saveAction\tstatement"
			],
			[
				"menu",
				"menuBar\tfunction"
			],
			[
				"ex",
				"exit\tfunction"
			],
			[
				"Tick",
				"TicksBelow\tinstance"
			],
			[
				"setT",
				"setTickInterval\tfunction"
			],
			[
				"setVal",
				"setValue\tfunction"
			],
			[
				"setM",
				"setMinimum\tfunction"
			],
			[
				"QL",
				"QLabel\tclass"
			],
			[
				"cl",
				"clicked"
			],
			[
				"QAP",
				"QApplication\tclass"
			],
			[
				"Q",
				"QtWidgets"
			],
			[
				"__",
				"__init__"
			],
			[
				"QT",
				"PyQt5〔module〕"
			],
			[
				"crete",
				"createLine\t(shapes.js)"
			],
			[
				"img",
				"img\tTag"
			],
			[
				"und",
				"underscores"
			],
			[
				"quest",
				"question-heading"
			],
			[
				"card",
				"card-header"
			],
			[
				"question",
				"question-heading\t(index.html)"
			],
			[
				"questi",
				"question-heading\t(index.html)"
			],
			[
				"margin",
				"margin-right"
			],
			[
				"add",
				"addQuestion"
			],
			[
				"arra",
				"array_push〔function〕"
			],
			[
				"newAnsw",
				"newAnswerInput"
			],
			[
				"newType",
				"newTypeSelect"
			],
			[
				"newHint",
				"newHintInput"
			],
			[
				"newQ",
				"newQuestionInput"
			],
			[
				"clas",
				"class\tAttr"
			],
			[
				"col-m",
				"col-md-8"
			],
			[
				"col",
				"col-md-4"
			],
			[
				"re",
				"removeClass〔function〕"
			],
			[
				"alert",
				"alert-success\t(index.html)"
			],
			[
				"my",
				"mysqli_query\t(encode.php)"
			],
			[
				"form",
				"formdata"
			],
			[
				"encode",
				"encode.php"
			],
			[
				"str_re",
				"str_replace"
			],
			[
				"col-",
				"col-md-8"
			],
			[
				"ans",
				"answerMode"
			],
			[
				"text",
				"textarea\t<textarea>"
			],
			[
				"check",
				"checkbox"
			],
			[
				"return",
				"$return〔variable〕"
			],
			[
				"new",
				"newQuestion"
			],
			[
				"auto",
				"autofocus\tAttr"
			],
			[
				"en",
				"endNode"
			],
			[
				"get",
				"getPosition"
			],
			[
				"start",
				"startNode"
			],
			[
				"fu",
				"function"
			],
			[
				"source",
				"sourcePassive\t(shapes.js)"
			],
			[
				"so",
				"sourcePassive"
			],
			[
				"dr",
				"draggable\t(init.js)"
			],
			[
				"ce",
				"centery"
			],
			[
				"move",
				"move_vector"
			],
			[
				"mo",
				"move_vector"
			],
			[
				"ta",
				"target"
			],
			[
				"tar",
				"target_vector"
			],
			[
				"d",
				"direction_current〔variable〕"
			],
			[
				"dir",
				"dir_eased"
			],
			[
				"C",
				"CAM_POSX〔variable〕"
			],
			[
				"CAM",
				"CAM_POSX\t(constants.py)"
			],
			[
				"stop",
				"stop_vertical\t(camera.py)"
			],
			[
				"cam",
				"cameraControls"
			],
			[
				"camera",
				"cameraControls\t(camera.py)"
			],
			[
				"shi",
				"shift_world\t(levels.py)"
			],
			[
				"shif",
				"shift_y"
			],
			[
				"shift",
				"shift_x"
			],
			[
				"wo",
				"world_shifty〔variable〕"
			],
			[
				"game",
				"game_world"
			],
			[
				"direction",
				"direction_target"
			],
			[
				"dire",
				"direction_current〔variable〕"
			],
			[
				"directoin",
				"direction"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/SurfaceMod.cs",
			"settings":
			{
				"buffer_size": 1335,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using UnityEngine;\n\npublic class WaterSurface : MonoBehaviour\n{\n    [SerializeField]\n    int size;\n\n    [SerializeField]\n    float oscillatorStrength;\n\n    [SerializeField]\n    int oscillatorSpeed;\n\n    int step;\n\n    Mesh mesh;\n\n\n\t// Use this for initialization\n\tvoid Start ()\n    {\n        mesh = GetComponent<MeshFilter>().mesh;\n        mesh.name = \"Surface Fluid\";\n\n        // Find origin\n        // Make force (origin, time)\n        // For every vertex, if distance between origin and vertex is equal\n        // to time, then vertex.y += 1/time;\n\n    }\n\n\t// Update is called once per frame\n\tvoid FixedUpdate ()\n    {\n\n        Vector2[] uv = new Vector2[verts.Length];\n\n        for (int i = 0; i < verts.Length; i++)\n        {\n            uv[i] = new Vector2((float)i % (float)(size+1) / (float)size, (float)i / (float)(size+1) / (float)size);\n        }\n\n        mesh.Clear();\n        mesh.vertices = verts;\n        mesh.triangles = tris;\n        mesh.uv = uv;\n\n        mesh.RecalculateNormals();\n        mesh.RecalculateBounds();\n\n        if (GetComponent<BoxCollider>() == null) {\n            gameObject.AddComponent<BoxCollider>();\n        }\n\n        step++;\n\t}\n}\n",
			"file": "Assets/WaterSurface.cs",
			"file_size": 2441,
			"file_write_time": 131648926707096912,
			"settings":
			{
				"buffer_size": 1171,
				"line_ending": "Windows"
			}
		},
		{
			"file": "MeshTest.sublime-project",
			"settings":
			{
				"buffer_size": 196,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include \"KnightTour.h\"\n\n#include <assert.h>\n#include <cstring>\n\nint* KnightTour::Solve20x20()\n{\n    static const int SideLength = 20;\n    static const int SequenceLength = SideLength * SideLength;\n    static const int WidthShift = 5;\n    static const int WidthMask = 0x1F;\n    static const int WidthCount = 32;\n    static const int HeightCount = 28;\n    static const int MarginCount = 4;\n    static const int TotalCount = WidthCount * HeightCount;\n    static const int SquareOneOffset = 1;\n    static const int TopLeftPosition = MarginCount | (MarginCount << WidthShift);\n    static const int DirectionNNW = -1 + (-2 * WidthCount);\n    static const int DirectionNNE = +1 + (-2 * WidthCount);\n    static const int DirectionWNW = -2 + (-1 * WidthCount);\n    static const int DirectionENE = +2 + (-1 * WidthCount);\n    static const int DirectionWSW = -2 + (+1 * WidthCount);\n    static const int DirectionESE = +2 + (+1 * WidthCount);\n    static const int DirectionSSW = -1 + (+2 * WidthCount);\n    static const int DirectionSSE = +1 + (+2 * WidthCount);\n    static const int PickScoreUndefined = 15;\n\n    int currentPosition;\n    int testScore, testPosition, *testPositionPtr;\n    int pickScore, pickPosition = 0;\n    int sequenceCounter = 0;\n    int* sequence = new int[SequenceLength];\n    int* isAvailable = new int[TotalCount];\n\n    memset(isAvailable, 0, (TotalCount * sizeof(*isAvailable)));\n    for (int y = 0, *i = &isAvailable[TopLeftPosition]; y < SideLength; y++)\n    {\n        for (int x = 0; x < SideLength; x++)\n        {\n            *i++ = 1;\n        }\n\n        i += (WidthCount - SideLength);\n    }\n\n    currentPosition = TopLeftPosition;\n    isAvailable[currentPosition] = 0;\n    sequence[sequenceCounter++] = SquareOneOffset;\n    while (sequenceCounter < SequenceLength)\n    {\n        pickScore = PickScoreUndefined;\n#ifdef _DEBUG\n        pickPosition = 0;\n#endif\n        testPosition = currentPosition + DirectionNNW;\n        if (isAvailable[testPosition] != 0)\n        {\n            testScore =\n                isAvailable[testPosition + DirectionNNW] +\n                isAvailable[testPosition + DirectionNNE] +\n                isAvailable[testPosition + DirectionWNW] +\n                isAvailable[testPosition + DirectionENE] +\n                isAvailable[testPosition + DirectionWSW] +\n                isAvailable[testPosition + DirectionESE] +\n                isAvailable[testPosition + DirectionSSW];  // Ignore DirectionSSE\n            if (testScore < pickScore)\n            {\n                pickScore = testScore;\n                pickPosition = testPosition;\n            }\n        }\n\n        testPosition = currentPosition + DirectionNNE;\n        if (isAvailable[testPosition] != 0)\n        {\n            testScore =\n                isAvailable[testPosition + DirectionNNW] +\n                isAvailable[testPosition + DirectionNNE] +\n                isAvailable[testPosition + DirectionWNW] +\n                isAvailable[testPosition + DirectionENE] +\n                isAvailable[testPosition + DirectionWSW] +\n                isAvailable[testPosition + DirectionESE] +  // Ignore DirectionSSW\n                isAvailable[testPosition + DirectionSSE];\n            if (testScore < pickScore)\n            {\n                pickScore = testScore;\n                pickPosition = testPosition;\n            }\n        }\n\n        testPosition = currentPosition + DirectionWNW;\n        if (isAvailable[testPosition] != 0)\n        {\n            testScore =\n                isAvailable[testPosition + DirectionNNW] +\n                isAvailable[testPosition + DirectionNNE] +\n                isAvailable[testPosition + DirectionWNW] +\n                isAvailable[testPosition + DirectionENE] +\n                isAvailable[testPosition + DirectionWSW] +  // Ignore DirectionESE\n                isAvailable[testPosition + DirectionSSW] +\n                isAvailable[testPosition + DirectionSSE];\n            if (testScore < pickScore)\n            {\n                pickScore = testScore;\n                pickPosition = testPosition;\n            }\n        }\n\n        testPosition = currentPosition + DirectionENE;\n        if (isAvailable[testPosition] != 0)\n        {\n            testScore =\n                isAvailable[testPosition + DirectionNNW] +\n                isAvailable[testPosition + DirectionNNE] +\n                isAvailable[testPosition + DirectionWNW] +\n                isAvailable[testPosition + DirectionENE] +  // Ignore DirectionWSW\n                isAvailable[testPosition + DirectionESE] +\n                isAvailable[testPosition + DirectionSSW] +\n                isAvailable[testPosition + DirectionSSE];\n            if (testScore < pickScore)\n            {\n                pickScore = testScore;\n                pickPosition = testPosition;\n            }\n        }\n\n        testPosition = currentPosition + DirectionWSW;\n        if (isAvailable[testPosition] != 0)\n        {\n            testScore =\n                isAvailable[testPosition + DirectionNNW] +\n                isAvailable[testPosition + DirectionNNE] +\n                isAvailable[testPosition + DirectionWNW] +  // Ignore DirectionENE\n                isAvailable[testPosition + DirectionWSW] +\n                isAvailable[testPosition + DirectionESE] +\n                isAvailable[testPosition + DirectionSSW] +\n                isAvailable[testPosition + DirectionSSE];\n            if (testScore < pickScore)\n            {\n                pickScore = testScore;\n                pickPosition = testPosition;\n            }\n        }\n\n        testPosition = currentPosition + DirectionESE;\n        if (isAvailable[testPosition] != 0)\n        {\n            testScore =\n                isAvailable[testPosition + DirectionNNW] +\n                isAvailable[testPosition + DirectionNNE] +  // Ignore DirectionWNW\n                isAvailable[testPosition + DirectionENE] +\n                isAvailable[testPosition + DirectionWSW] +\n                isAvailable[testPosition + DirectionESE] +\n                isAvailable[testPosition + DirectionSSW] +\n                isAvailable[testPosition + DirectionSSE];\n            if (testScore < pickScore)\n            {\n                pickScore = testScore;\n                pickPosition = testPosition;\n            }\n        }\n\n        testPosition = currentPosition + DirectionSSW;\n        if (isAvailable[testPosition] != 0)\n        {\n            testScore =\n                isAvailable[testPosition + DirectionNNW] +  // Ignore DirectionNNE\n                isAvailable[testPosition + DirectionWNW] +\n                isAvailable[testPosition + DirectionENE] +\n                isAvailable[testPosition + DirectionWSW] +\n                isAvailable[testPosition + DirectionESE] +\n                isAvailable[testPosition + DirectionSSW] +\n                isAvailable[testPosition + DirectionSSE];\n            if (testScore < pickScore)\n            {\n                pickScore = testScore;\n                pickPosition = testPosition;\n            }\n        }\n\n        testPosition = currentPosition + DirectionSSE;\n        if (isAvailable[testPosition] != 0)\n        {\n            testScore =  // Ignore DirectionNNW\n                isAvailable[testPosition + DirectionNNE] +\n                isAvailable[testPosition + DirectionWNW] +\n                isAvailable[testPosition + DirectionENE] +\n                isAvailable[testPosition + DirectionWSW] +\n                isAvailable[testPosition + DirectionESE] +\n                isAvailable[testPosition + DirectionSSW] +\n                isAvailable[testPosition + DirectionSSE];\n            if (testScore < pickScore)\n            {\n                pickScore = testScore;\n                pickPosition = testPosition;\n            }\n        }\n\n#ifdef _DEBUG\n        assert(pickScore != PickScoreUndefined);\n        assert(pickPosition != 0);\n        assert(isAvailable[pickPosition] != 0);\n#endif\n        currentPosition = pickPosition;\n        isAvailable[currentPosition] = 0;\n        pickPosition -= (TopLeftPosition - SquareOneOffset);\n        sequence[sequenceCounter++] =\n            (pickPosition & WidthMask) + (SideLength * (pickPosition >> WidthShift));\n    }\n\n    delete[] isAvailable;\n    return sequence;\n}\n",
			"file": "/C/Users/Danny/Documents/warnsdorff-knight-tour-20x20_cplusplus/ProgrammingChallenge35Cpp/KnightTour.cpp",
			"file_size": 9942,
			"file_write_time": 131631875361872075,
			"settings":
			{
				"buffer_size": 8205,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/FlyCam.cs",
			"settings":
			{
				"buffer_size": 2520,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/HTML5.sublime-build",
					""
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/HTML5.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/HTML5.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/CppClang.sublime-build",
					""
				],
				[
					"Packages/User/CppClang.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/CppClang.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 281.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"git br",
				"Git: Change Branch"
			],
			[
				"git ",
				"Git: Pull"
			],
			[
				"git bra",
				"Git: Change Branch"
			],
			[
				"git",
				"Git: Pull"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add .",
				"Git: Add..."
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git commit ",
				"Git: Commit"
			],
			[
				"git add all",
				"Git: Add All"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"git p",
				"Git: Pull"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"git ch",
				"Git: Checkout Tag"
			],
			[
				"git ad",
				"Git: Add All"
			],
			[
				"Git  bra",
				"Git: Change Branch"
			],
			[
				"Git ",
				"Git: Pull"
			],
			[
				"Snippet: for",
				"Snippet: For Loop"
			],
			[
				"Git",
				"Git: Status"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"resource",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packagere",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Snippet:  str",
				"Snippet: struct"
			],
			[
				"Snippet: ",
				"Snippet: struct"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: remove pa",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remo",
				"Package Control: Remove Channel"
			],
			[
				"Package Control: las",
				"Package Control: List Packages"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: li",
				"Package Control: List Packages"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				":w",
				":w - Save"
			],
			[
				":W",
				":w - Save"
			],
			[
				"Package Control: install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: isnta",
				"Package Control: Install Package"
			],
			[
				"Package Control: rem",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"Anaconda",
				"Anaconda: Set Python interpreter"
			],
			[
				"package Control",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"Package Control: l",
				"Package Control: Install Package"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"Pack",
				"Package Control: Install Package"
			]
		],
		"width": 494.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Danny/Documents/Unity/Projects/MeshTest/Assets"
	],
	"file_history":
	[
		"/C/Users/Danny/Documents/Begin stap 2",
		"/C/Users/Danny/Documents/Unity/Projects/MeshTest/.gitignore",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/OmniSharpSublime.sublime-settings",
		"/C/Users/Danny/Documents/Unity/Projects/MeshTest/MeshTest.sublime-project",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/insert_game_name/main.cpp",
		"/C/Users/Danny/Documents/C++/ProjectGT1/.gitignore",
		"/C/Users/Danny/Documents/stap 1",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/data/scenes/example.irr",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/source/Irrlicht/Makefile",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/data/scenes/tiles.irr",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/Vulkan.h",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/Makefile",
		"/C/Users/Danny/Documents/Vulkan/VulkanCPP/VulkanCPP/main.cpp",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/Vulkan.cpp",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/media/example.irr",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/data/Terrain/example.irr",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/data/Terrain/example.irr.meshes/1.irrmesh",
		"/C/Users/Danny/AppData/Local/Temp/7zOC42F150E/sky.shader",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/media/irrlicht.dat",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/DocBlockr/Base File.sublime-settings",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/12.TerrainRendering/Makefile",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/01.HelloWorld/Makefile",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/12.TerrainRendering/main.cpp",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/insert_game_name/Makefile",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/01.HelloWorld/HelloWorld.depend",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/source/Irrlicht/Irrlicht-gcc.layout",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/save/checkpoint",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/logs/checkpoint",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/logs/events.out.tfevents.1516825793.DESKTOP-GN3FM6M",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/train_base.py",
		"/C/Users/Danny/Documents/export-saved-reddit-master/export-saved-reddit-master/AccountDetails.py",
		"/C/Users/Danny/Documents/Unity/Projects/Devious2/.gitignore",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/emotion_ai_loader.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/emotion_ai.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/tensorflow_tut.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/python/client/session.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/emotion_recognition.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/contrib/learn/python/learn/datasets/base.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/contrib/learn/python/learn/datasets/mnist.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/tensor_ui.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/deep_net.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/mnist_converted.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/examples/tutorials/mnist/input_data.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/L15,R1,C1,Fearful1,visible,normal,255.jpg.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/L14,R1,C1,Fearful2,visible,normal,255.jpg.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/L13,R1,C1,Fearful3,visible,normal,255.jpg.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/FearL1.png.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/Fear.jpg.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/data/train/fear/_Fear.jpg.json",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/examples/tutorials/mnist/mnist.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/contrib/learn/python/learn/datasets/__init__.py",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/SublimeGDB/SublimeGDB.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/Emmet/Emmet.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/Jedi - Python autocompletion/sublime_jedi.sublime-settings",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/python/ops/math_ops.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/data.json",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/numpy/core/numeric.py",
		"/C/Users/Danny/Documents/INC/14_pose.yml",
		"/C/Users/Danny/Documents/C++/NeuralNetwork/NeuralNetwork.exe",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/Sublimerge 3/Default (Windows).sublime-keymap",
		"/C/Users/Danny/Documents/C++/NeuralNetwork/test.cpp",
		"/C/Users/Danny/Documents/C++/NeuralNetwork/NeuralNetwork.cpp",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/Sublimerge 3/Sublimerge 3.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/CTags.sublime-settings",
		"/C/Users/Danny/Documents/C++/sublimetextincontext.bat",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/CTags/CTags.sublime-settings",
		"/C/Program Files/Sublime Text 3/sublime_text.exe",
		"/C/Users/Danny/Downloads/kinect-body-language-analysis-master/kinect-body-language-analysis-master/src/shahqaan/kinect/GraphPanel.java",
		"/C/Users/Danny/Downloads/kinect-body-language-analysis-master/kinect-body-language-analysis-master/src/shahqaan/kinect/TrackableSkeleton.java",
		"/C/Users/Danny/Downloads/kinect-body-language-analysis-master/kinect-body-language-analysis-master/src/shahqaan/kinect/AbstractDrawable.java",
		"/C/Users/Danny/Documents/INC/computer_vision/openpose/installation.md",
		"/C/Users/Danny/Documents/INC/openpose/README.md",
		"/C/Users/Danny/Documents/Quizzer/js/jquery-3.2.1.min.js",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/shaders/shader.frag",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/shaders/shader.vert",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/shaders/compile.bat",
		"/C/Users/Danny/Documents/Vulkan/Libraries/VulkanSDK/1.0.51.0/Templates/Visual Studio 2017/VulkanProgram/main.cpp",
		"/C/Users/Danny/AppData/Local/Temp/7zO090AD9B1/main.cpp",
		"/C/Users/Danny/Documents/Vulkan/VulkanCPP/VulkanCPP/shaders/compile.bat",
		"/C/Users/Danny/Documents/Vulkan/VulkanCPP/VulkanCPP/shaders/shader.frag",
		"/C/Users/Danny/Documents/Vulkan/VulkanCPP/VulkanCPP/shaders/shader.vert",
		"/C/Users/Danny/AppData/Roaming/.minecraft/launcher_profiles.json",
		"/C/Users/Danny/Documents/Quizzer/scss/.sassbuilder-config.json",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/View In Browser.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/View In Browser/View In Browser.sublime-settings",
		"/C/Users/Danny/Documents/Confocal/QT5/pyqtgraph.py",
		"/C/Users/Danny/Downloads/mmgr_dal_RCM (3).dll",
		"/C/Users/Public/Documents/National Instruments/NI-DAQ/Examples/DAQmx ANSI C/Digital/Generate Values/Write Dig Port/WriteDigPort.c",
		"/C/Users/Public/Documents/National Instruments/NI-DAQ/Examples/DAQmx ANSI C/Analog Out/Generate Voltage/Cont Gen Volt Wfm-Int Clk/ContGen-IntClk.c",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/BracketHighlighter/bh_core.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/bh_core.sublime-settings",
		"/C/Users/Danny/AppData/Local/Temp/scp44117/usr/share/wordpress/wp-content/themes/churchlink/front-page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp44471/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp45342/usr/share/wordpress/wp-content/themes/churchlink/header.php",
		"/C/Users/Danny/AppData/Local/Temp/scp13447/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp38618/subdomains/robin/httpdocs/wp-content/themes/ph/header.php",
		"/C/Users/Danny/AppData/Local/Temp/scp50974/subdomains/robin/httpdocs/wp-content/themes/ph/style.css",
		"/C/Users/Danny/Documents/pyqtgraph/tools/release_instructions.md",
		"/C/Users/Danny/AppData/Local/Temp/scp31661/home/drvanon/ph/page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp32180/home/drvanon/ph/sass/custom/_custom.scss",
		"/C/Users/Danny/.hyper.js",
		"/C/Users/Danny/AppData/Local/Temp/scp39316/subdomains/robin/httpdocs/wp-content/themes/ph/sidebar-menu.php",
		"/C/Users/Danny/AppData/Local/Temp/scp21714/subdomains/robin/httpdocs/wp-content/themes/ph/functions.php",
		"/C/Users/Danny/AppData/Local/Temp/scp48543/home/drvanon/ph/sass/custom/_custom.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp19620/home/drvanon/ph/functions.php",
		"/C/Users/Danny/AppData/Local/Temp/scp55420/home/drvanon/ph/front-page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp33608/home/drvanon/ph/gulpfile.js",
		"/C/Users/Danny/Downloads/drvanon.raspberrypi.id_rsa",
		"/C/Users/Danny/AppData/Local/Temp/scp59831/home/drvanon/ph/template-parts/content-page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp16661/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp13298/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp09209/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp11229/usr/share/wordpress/wp-content/themes/churchlink/searchform.php",
		"/C/Users/Danny/AppData/Local/Temp/scp10172/usr/share/wordpress/wp-content/themes/churchlink/front-page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp08478/usr/share/wordpress/wp-content/themes/churchlink/header.php",
		"/C/Users/Danny/AppData/Local/Temp/scp22026/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/Downloads/ExpandingSearchBar/ExpandingSearchBar/index.html",
		"/C/Users/Danny/AppData/Local/Temp/scp41270/usr/share/wordpress/wp-content/themes/churchlink/header.php",
		"/C/Users/Danny/Documents/kerk/ftpsync.settings",
		"/C/Users/Danny/Documents/kerk/sftp-config.json",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/SFTP.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/SFTP/SFTP.sublime-settings",
		"/C/Users/Danny/AppData/Local/Temp/scp48929/var/ftp/wp-content/themes/ph/header.php",
		"/C/Users/Danny/AppData/Local/Temp/scp06005/var/ftp/wp-content/themes/ph/sass/custom/_custom.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp55625/var/ftp/wp-content/themes/ph/sidebar.php",
		"/C/Users/Danny/AppData/Local/Temp/scp45427/var/ftp/wp-content/themes/ph/page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp06450/var/ftp/wp-content/themes/ph/sass/style.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp45453/var/ftp/wp-config-sample.php"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 142.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"/",
			"_triangles",
			"_vertices"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/SurfaceMod.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1335,
						"regions":
						{
						},
						"selection":
						[
							[
								1028,
								1028
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										904,
										905
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										621,
										622
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1230,
										1231
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										263,
										264
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"166,176": "The private field 'resolution' is never assigned",
								"209,223": "The private field 'realtimeUpdate' is never assigned",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"329,336": "Use 'var' keyword",
								"384,387": "Use 'var' keyword",
								"434,441": "Use 'var' keyword"
							},
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 122.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/WaterSurface.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1171,
						"regions":
						{
						},
						"selection":
						[
							[
								880,
								880
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1156,
										1157
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										729,
										730
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1167,
										1168
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										620,
										621
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"oops":
							{
								"131,149": "The private field 'oscillatorStrength' is never assigned",
								"181,196": "The private field 'oscillatorSpeed' is never assigned",
								"666,673": "Use 'var' keyword",
								"730,733": "Use 'var' keyword",
								"775,782": "Use 'var' keyword",
								"93,97": "The private field 'size' is never assigned"
							},
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 624.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "MeshTest.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 196,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								196
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/Danny/Documents/warnsdorff-knight-tour-20x20_cplusplus/ProgrammingChallenge35Cpp/KnightTour.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8205,
						"regions":
						{
						},
						"selection":
						[
							[
								1343,
								1354
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1394,
										1395
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1342,
										1343
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1394,
										1395
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1342,
										1343
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 554.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/FlyCam.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2520,
						"regions":
						{
						},
						"selection":
						[
							[
								2264,
								2264
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										3013,
										3014
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										116,
										117
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2264,
										2265
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2212,
										2213
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"135,152": "Name should have prefix '_'. (Rule 'Fields').",
								"176,186": "Name should have prefix '_'. (Rule 'Fields').",
								"209,224": "Name should have prefix '_'. (Rule 'Fields').",
								"248,262": "Name should have prefix '_'. (Rule 'Fields').",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"289,303": "Name should have prefix '_'. (Rule 'Fields').",
								"340,341": "Initializing field by default value is redundant",
								"376,377": "Initializing field by default value is redundant"
							},
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.clangautocomplete":
	{
		"height": 146.0
	},
	"output.exec":
	{
		"height": 124.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 182.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 170.0
	},
	"pinned_build_system": "",
	"project": "MeshTest.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
